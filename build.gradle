plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "1.5+" apply false
}

architectury {
    minecraft = rootProject.minecraft_version
}

subprojects {
    apply plugin: "dev.architectury.loom"

    loom {
        silentMojangMappingsLicense()
    }

    repositories {
        // Add repositories to retrieve artifacts from in here.
        // You should only use this when depending on other mods because
        // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
        // See https://docs.gradle.org/current/userguide/declaring_repositories.html
        // for more information about repositories.
        maven { url "https://maven.parchmentmc.org" } // Parchment mappings

        maven { url 'https://maven.greenhouseteam.dev/releases/' } // Farmers Delight Refabricated
        maven { url "https://mvn.devos.one/snapshots/" } // Registrate, Porting Lib, Forge Tags, Milk Lib
        maven { url "https://mvn.devos.one/releases/" } // Porting Lib
        maven {
            url "https://maven.jamieswhiteshirt.com/libs-release" // Reach Entity Attributes (Required by Porting Lib)
            content { includeGroup "com.jamieswhiteshirt" }
        }
        maven {
            url "https://jitpack.io/" // Fabric ASM
            content { excludeGroup "io.github.fabricators_of_create" }
        }

        maven { url 'https://www.cursemaven.com' } // Farmers Delight

        maven { url "https://maven.ryanliptak.com/" } // Appleskin

        maven { url "https://maven.blamejared.com/" } // JEI
        maven { url "https://maven.shedaniel.me" } // REI
        maven { url "https://maven.terraformersmc.com/" } // EMI

        maven { url "https://api.modrinth.com/maven" } // MidnightLib

        maven {
            url "https://maven2.bai.lol"
            content {
                includeGroup "lol.bai"
                includeGroup "mcp.mobius.waila"
            }
        }
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        // The following line declares the mojmap mappings, you may use other mappings as well
        //mappings loom.officialMojangMappings()
        // The following line declares the yarn mappings you may select this one as well.
        // mappings "net.fabricmc:yarn:1.20.1+build.10:v2"
        mappings(loom.layered {
            it.parchment("org.parchmentmc.data:parchment-${minecraft_version}:${parchment_version}@zip")
            it.officialMojangMappings { nameSyntheticMembers = false }
        })
    }

    tasks.processResources {
        var replaceProperties = [
                minecraft_version    : minecraft_version,
                minecraft_min_version: minecraft_min_version,
                minecraft_max_version: minecraft_max_version,

                mod_id               : project.mod_id,
                mod_name             : project.mod_name,
                mod_version          : project.mod_version,
                mod_license          : project.mod_license,
                mod_authors          : project.mod_authors,
                mod_description      : project.mod_description,
                mod_credits          : project.mod_credits,
                mod_homepage         : project.mod_homepage,
                mod_github           : project.mod_github,
                mod_issues           : project.mod_issues,
                mod_discord          : project.mod_discord
        ]

        inputs.properties replaceProperties

        filesMatching(["META-INF/mods.toml", "fabric.mod.json", "pack.mcmeta"]) {
            expand replaceProperties + [project: project]
        }
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    base {
        archivesName = rootProject.archives_base_name
    }

    def isBeta = true
    def betaVersion = "-2"
    def buildSuffix = isBeta ? "-beta" + betaVersion : ""

    version = "${project.name}-${rootProject.minecraft_version}-${rootProject.mod_version}${buildSuffix}"
    group = rootProject.maven_group

    repositories {
        // Add repositories to retrieve artifacts from in here.
        // You should only use this when depending on other mods because
        // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
        // See https://docs.gradle.org/current/userguide/declaring_repositories.html
        // for more information about repositories.
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.release = 17
    }

    java {
        withSourcesJar()
    }
}
